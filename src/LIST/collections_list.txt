--> AARAY LIST 

-->LIST IS USED TO STORE VALUES . IT IS SAME LIKE ARRAY BUT IN LIST THERE IS NO NEED TO DECLARE SIZE OF THE ARRAY BEFORE
-->IT HELPS IN DYNAMIC SIZING TO STORE ELEMENTS
-->WHEN YOU CREATE ARRAYLIST THE INTIAL CAPACITY IS 10
-->CAPACITY REFERS TO THE SIZE OF INTERNAL ARRAY THEN CAN HOLD THE ELEMENTS BEFORE RESIZING THE LIST
-->INTERNALLY ARRAYLIST ATORE THINGS IN FORM OF ARRAYS(** INTERNAL AARAY **)


-->ADDING ELEMENTS

-->WHEN WE ARE TRYING TO ADD NEW ELEMENT INTO THE LIST IT CHECKS WEATHER THERE IS REMAING CAPACTITY TO FILL NEW ELEMENT
-->IF THERE IS NO SPACE IT GOES FOR **RESIZING**
-->RESIZING IS NOTHING BUT IT CREATES NEW ARRAY WITH 1.5 TIMES OF THE CAPACITY OF PREVIOUS
-->THEN IT COPIES ALL THE ELEMENTS FROM PREVIOUS ARRAY TO NEW ARRAY
-->THEN IT DISPOSES THE PREVIOUS ARRAY AND USES THE NEW ARRAY FOR FUTURE ADD
-->LIST IS IMMUTABLE


-->REMOVING ELEMENTS

-->WHEN WE ARE TRING TO REMOVE ELEMENT BASED ON INDEX
-->IT CHECKS WEATHER THE GIVEN INDEX EXISTS OR NOT
-->IF EXISTS IT REMOVE REMOVE THE ELEMENT PRESENT IN THAT INDEX 
-->AND SHIFTS ALL ELEMENTS TO LEFT WHICH ARE AFTER THAT INDEX
-->REDUSE THE SIZE BY 1


-->1)FIRST INTIALIZE THE LIST
List<Integer> "listname" = new ArrayList<>()

-->TO ADD SOMETHING INTO LIST
"listname".add("item to add")

-->TO ADD SOMETHING INTO LIST AT PARTICULAR INDEX
"listname".add(index,"item to add")

-->TO CHANGE IN PATRICULAR IN INDEX AND SET IN THE NEW VALUE IN THE PARTICULAR INDEX 
"listname".set(index,"new value")

-->COMBINING TOW LISTS WE CAN USE
"listname1".addAll("listname2")

-->TO GET LIST ***SIZE***
"listname".size()

-->TO GET THE ITEM FROM PARTICULAR INDEX
"listname".get("index num")


-->TO REMOVE ELEMENT FROM LIST
"listname".remove("index num") (OR) "listname".remove("ITEM NAME")

-->TO CHECK WEATHER THE ITEM PRESENT IN LIST OR NOT
"listname".contains("item name")  ==> IT JUST GIVES OUTPUR EITHER TRUE OR FALSE

-->TO SORT THE LIST OF ELEMENTS
Collections.list("list name")  (OR) "list name".sort(null);



-->CONVERTING ARRAYS INNTO LIST USE
List<String> "list name" = Arrays.toList("array name")
//but above list which is prepared from array in not dynamic and it is static 
means we can increse the size of the list
//some times toList is mutable and it is dynamic 
//if you want static we can use asList()


-->IF WE WANT TO CONVER ***ARRAY INTO*** LIST WHICH IS ***DYNAMICALLY CHANGING***
List<Integer> listname = new ArrayList<>(*array name*)

